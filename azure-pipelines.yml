trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseNode@1
  inputs:
    version: '20.x'  # Specify the Node.js version you need (18.x or 20.x)
  displayName: 'Use Node.js'

- script: yarn cache clean
  displayName: 'Clean Yarn Cache'

- script: npm install --global yarn
  displayName: 'Install Yarn'

- script: yarn install
  displayName: 'Install Node Packages'

- script: npm install -g @angular/cli@latest
  displayName: 'Install Angular CLI'

# Run Angular Tests and Build
- script: |
    ng test --no-watch --no-progress --browsers ChromeHeadless --code-coverage
    ng build --prod
  displayName: 'Angular Test and Build'

# Generate Code Coverage Report
- task: reportgenerator@5
  displayName: 'Generate Code Coverage Report'
  inputs:
    reports: 'coverage/iRED-Web-Portal/cobertura-coverage.xml'
    targetdir: 'coverage/iRED-Web-Portal/Reports'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(Build.SourcesDirectory)/reports/junit.xml'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/coverage/iRED-Web-Portal/cobertura-coverage.xml'
    reportDirectory: '$(Build.SourcesDirectory)/coverage/iRED-Web-Portal/Reports'

- task: ArchiveFiles@2
  displayName: 'Archive Artifacts'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/dist/iRED-Web-Portal'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# Send Slack Notification
- script: |
    curl -X POST -H 'Content-type: application/json' \
    --data '{"text":"Build $(Build.BuildId) for Angular SPA is successful."}' $SLACK_WEBHOOK_URL
  displayName: 'Send Slack Notification'
